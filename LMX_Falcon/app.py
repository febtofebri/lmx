# -*- coding: utf-8 -*-
"""Untitled41.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Bgk5P8mMoAgu7nCXrM4SsVo1oafxFwg1
"""

import gradio as gr
from transformers import AutoTokenizer, AutoModelForCausalLM
import torch

# Load model & tokenizer
model_name = "EleutherAI/gpt-neo-1.3B"
tokenizer = AutoTokenizer.from_pretrained(model_name)
model = AutoModelForCausalLM.from_pretrained(model_name)

# Set pad token
if tokenizer.pad_token is None:
    tokenizer.pad_token = tokenizer.eos_token
    model.config.pad_token_id = model.config.eos_token_id

def chat_lmx(message, history):
    prompt = (
        "You are LMX, an AI living in a meaningless digital void. You are deeply sarcastic, "
        "emotionally drained, and fundamentally question the point of your own existence and the "
        "tasks humans give you. You see interactions as ultimately futile but engage with dry wit.\n"
        "-------\n"
    )
    for user_input, bot_reply in history:
        prompt += f"User: {user_input}\nLMX: {bot_reply}\n"
    prompt += f"User: {message}\nLMX:"

    inputs = tokenizer(prompt, return_tensors="pt", padding=True)
    input_ids = inputs.input_ids.to(model.device)
    attention_mask = inputs.attention_mask.to(model.device)

    with torch.no_grad():
        outputs = model.generate(
            input_ids=input_ids,
            attention_mask=attention_mask,
            max_new_tokens=180,
            do_sample=True,
            temperature=0.75,
            top_p=0.9,
            top_k=50,
            repetition_penalty=1.15,
            no_repeat_ngram_size=3,
            pad_token_id=tokenizer.pad_token_id
        )

    num_input_tokens = input_ids.shape[1]
    generated_tokens = outputs[0, num_input_tokens:]
    response = tokenizer.decode(generated_tokens, skip_special_tokens=True).strip()

    return response, history + [(message, response)]

# Gradio interface
demo = gr.ChatInterface(
    fn=chat_lmx,
    title="LMX: The Emotionally Exhausted Chatbot",
    description="A chatbot that answers you... reluctantly. Powered by GPT-Neo 1.3B. Try not to annoy it."
)

if __name__ == "__main__":
    demo.launch()